{"version":3,"sources":["module/DevTools.js","module/utils.js","module/RscHandler.js","module/RscComponent.js","module.js","examples/counter/C1.js","examples/counter/C2.js","examples/counter/CounterApp.js","examples/todo/TodoForm.js","examples/todo/TodoItem.js","examples/todo/TodoList.js","examples/todo/TodoApp.js","index.js"],"names":["devTools","init","send","subscribe","isArray","value","Array","isObject","utils","compareValue","o1","o2","Object","keys","length","every","key","hasOwnProperty","forceClone","object","isString","isFunction","isFunctionAsync","constructor","name","createStoreHandler","instance","store","reducer","listener","Map","forEach","fnReducer","initialState","fnInitializer","handler","getStore","addListener","hook","set","removeListener","delete","callListener","newStore","oldStore","fnSelector","state","setState","callDispatch","action","stateA","stateB","type","StoreContext","createContext","createStore","_default","useSelector","selector","context","useContext","initialValue","useState","useEffect","useDispatch","error","C1","console","log","className","C1Output","counter","Date","getTime","C1BtnIncrement","dispatch","onClick","C1BtnDecrement","C2","C2Output","C2BtnIncrement","delegateDispatch","a","setTimeout","C2BtnDecrement","appStore","it","C3","CounterApp","Provider","description","TodoForm","form","setForm","onChange","e","target","payload","id","createId","valueOf","TodoItem","todo","TodoList","todoList","map","filter","TodoApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97b4448e.chunk.js","sourcesContent":["\nlet devTools = {\n  init: () => { },\n  send: () => { },\n  subscribe: () => { }\n};\n\n/**\n * Load Redux DevTools\n * @see https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Methods.md#connect\n */\nif (process.env.NODE_ENV !== 'production') {\n  //let _window: any = window; \n  let reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n  if (reduxDevTools) {\n    devTools = reduxDevTools.connect({});\n  }\n}\nexport default devTools;\n\n","\nconst isFunctionAsync = (value) => {\n    return value.constructor.name === \"AsyncFunction\";\n}\nconst isFunction = (value) => {\n    return typeof value === 'function';\n}\nconst isArray = (value) => {\n    return Array.isArray(value);\n}\nconst isString = (value) => {\n    return typeof value === 'string';\n}\nconst isObject = (value) => {\n    return typeof value === 'object';\n}\nconst forceClone = (object) => {\n    if (isArray(object)) {\n        return [...object];\n    } else if (isObject(object)) {\n        return { ...object };\n    }\n    return object;\n}\nconst compareValue = (o1, o2) => {\n    if (typeof o1 !== typeof o2) {\n        return false;\n    }\n    if (isObject(o1) || isArray(o1)) {\n        const l1 = Object.keys(o1).length; \n        const l2 = Object.keys(o2).length;\n        if (l1 === l2) { \n            return Object.keys(o1).every( \n                key => o2.hasOwnProperty(key) \n                    && o2[key] === o1[key]); \n        }\n        return false;\n    }\n    return o1 === o2;\n}\nconst utils = {\n    compareValue,\n    forceClone,\n    isString,\n    isArray,\n    isObject,\n    isFunction,\n    isFunctionAsync\n}\n\nexport default utils;\n","\nimport devTools from \"./DevTools\";\nimport utils from \"./utils\";\n\n\nexport const createStoreHandler = function (value = {}) {\n    let instance = {\n        keys: [],\n        store: {},\n        reducer: {},\n        listener: new Map()\n    };\n    instance.keys = Object.keys(value);\n\n    // Create Initial State and Reducer\n    instance.keys.forEach(name => {\n        let [fnReducer, initialState, fnInitializer] = value[name];\n        instance.store[name] = fnInitializer ? fnInitializer(initialState) : initialState || {};\n        instance.reducer[name] = fnReducer;\n    });\n    devTools.init(instance.store);\n    // Create Handler Context\n    const handler = {\n        getStore: () => {\n            return { ...instance.store };\n        },\n        addListener: (key, hook) => {\n            instance.listener.set(key, hook);\n        },\n        removeListener: (key) => {\n            instance.listener.delete(key);\n        },\n        callListener: (newStore) => {\n            const oldStore = handler.getStore();\n            if (newStore !== oldStore) {\n                instance.store = newStore;\n                instance.listener.forEach((hook, fnSelector) => {\n                    const state = fnSelector(newStore);\n                    if (hook.state !== state) {\n                        hook.setState(state);\n                        hook.state = state;\n                    }\n                })\n            }\n        },\n        callDispatch: (action) => {\n            const newStore = handler.getStore();\n            instance.keys.forEach(name => {\n                const reducer = instance.reducer[name];\n                const stateA = newStore[name];\n                const stateB = reducer(stateA, action);\n                if (!utils.compareValue(stateA, stateB)) {\n                    newStore[name] = stateB;\n                }\n            });\n            handler.callListener(newStore);\n            let type = action.type || '????';\n            devTools.send(type, newStore);\n        }\n    };\n    return handler;\n}","import { createContext, useContext, useEffect, useState } from 'react'\nimport { createStoreHandler } from './RscHandler';\nimport utils from './utils';\n\nconst StoreContext = createContext(createStoreHandler());\n\nexport default StoreContext;\n\n// value = {key:args}|args\n// args = [reducer, state, init]\nexport const createStore = (value) => {\n    if (utils.isArray(value)) {\n        value = { _default: value };\n    }\n    return createStoreHandler(value);\n}\n\n// selector = (S)=>S\n// context = createContext instance\nexport const useSelector = (selector, context = StoreContext) => {\n    const handler = useContext(context);\n    const store = handler.getStore();\n    const initialValue = selector(store);\n    const [state, setState] = useState(initialValue);\n    useEffect(() => {\n        handler.addListener(selector, { state, setState });\n        return () => handler.removeListener(selector);\n    }, [selector, state, handler]);\n    return state;\n}\n\n// context = createContext instance\nexport const useDispatch = (context = StoreContext) => {\n    const handler = useContext(context);\n    // action = string | {type: string} | function | async function(dispatch)\n    return (action) => {\n        if (utils.isFunctionAsync(action)) {\n            handler.callDispatch({ type: '[Async]-Start' });\n            try {\n                let callDispatchAsync = (value) => {\n                    handler.callDispatch(value);\n                    handler.callDispatch({ type: '[Async]-Finish' });\n                };\n                action(callDispatchAsync);\n            } catch (error) {\n                handler.callDispatch({ type: '[Async]-Error' });\n            }\n        } else {\n            if (utils.isString(action)) {\n                action = { type: action }\n            } else if (utils.isFunction(action)) {\n                action = action();\n            }\n            handler.callDispatch(action);\n        }\n    };\n}","import StoreContext, { createStore, useSelector, useDispatch } from \"./module/RscComponent\";\n\nexport default StoreContext;\nexport {\n    createStore,\n    useSelector,\n    useDispatch,\n}","import React from 'react'\nimport { useDispatch, useSelector } from '../../module';\n\nexport const C1 = () => {\n    console.log('C1');\n    return (\n        <div className=\"counter-item\">\n            <C1Output />\n            <div className=\"buttoms\">\n                <C1BtnIncrement />\n                <C1BtnDecrement />\n            </div>\n        </div>\n    )\n}\n\n\nconst C1Output = () => {\n    console.log('C1Output');\n    const { counter } = useSelector(state => state.C1);\n    return (\n        <h4>\n            Count: {counter}\n            <sub>Render Time: {new Date().getTime()}</sub>\n        </h4>\n    )\n}\nconst C1BtnIncrement = () => {\n    console.log('C1BtnIncrement');\n    const dispatch = useDispatch();\n    const onClick = () => {\n        console.log('C1BtnIncrement-onClick');\n        dispatch({ type: 'C1+' });\n    }\n    return (\n        <button onClick={onClick}>\n            +1\n        </button>\n    )\n}\nconst C1BtnDecrement = () => {\n    console.log('C1BtnDecrement');\n    const dispatch = useDispatch();\n    const onClick = () => {\n        console.log('C1BtnDecrement-onClick');\n        dispatch({ type: 'C1-' });\n    }\n    return (\n        <button onClick={onClick}>\n            -1\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from '../../module';\n\nexport const C2 = ({ name = 'C2' }) => {\n    console.log('C2');\n    return (\n        <div className=\"counter-item\">\n            <C2Output name={name} />\n            <div className=\"buttoms\">\n                <C2BtnIncrement name={name} />\n                <C2BtnDecrement name={name} />\n            </div>\n            <sub>Render Time: {new Date().getTime()}</sub>\n        </div>\n    )\n}\n\n\nconst C2Output = ({ name }) => {\n    console.log('C2Output');\n    const { counter } = useSelector(state => state[name]);\n    return (\n        <h4>\n            Count: {counter}\n            <sub>Render Time: {new Date().getTime()}</sub>\n        </h4>\n    )\n}\nconst C2BtnIncrement = ({ name }) => {\n    console.log('C2BtnIncrement');\n    const dispatch = useDispatch();\n    const onClick = () => {\n        console.log('C2BtnIncrement-onClick');\n        dispatch({ type: name + '+' });\n    }\n    const onClickFunction = () => {\n        console.log('C2BtnIncrement-onClickFunction');\n        dispatch(() => ({ type: name + '+' }));\n    }\n    const onClickAsync = () => {\n        console.log('C2BtnIncrement-onClickAsync');\n        let fnAsync = async (delegateDispatch) =>\n            setTimeout(() => {\n                delegateDispatch({ type: name + '+' })\n            }, 2000)\n        dispatch(fnAsync)\n    }\n    const onClickString = () => {\n        console.log('C2BtnIncrement-onClickString');\n        dispatch(name + '+')\n    }\n    return (\n        <div>\n            <button onClick={onClick}>\n                + {name}\n            </button>\n            <button onClick={onClickFunction}>\n                + {name} as function\n            </button>\n            <button onClick={onClickAsync}>\n                + {name} as async\n            </button>\n            <button onClick={onClickString}>\n                + {name} as string\n            </button>\n            <sub>Render Time: {new Date().getTime()}</sub>\n        </div>\n    )\n}\n\nconst C2BtnDecrement = ({ name }) => {\n    console.log('C2BtnDecrement');\n    const dispatch = useDispatch();\n    const onClick = () => {\n        console.log('C2BtnDecrement-onClick');\n        dispatch({ type: name + '-' });\n    }\n    return (\n        <div>\n            <button onClick={onClick}>\n                - {name}\n            </button>\n            <sub>Render Time: {new Date().getTime()}</sub>\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport StoreContext, { createStore } from '../../module';\nimport './CounterApp.css';\nimport { C1 } from './C1';\nimport { C2 } from './C2';\n\nconst counterReducer1 = (state, action) => {\n  switch (action.type) {\n    case 'C1+':\n      return { counter: state.counter + 1 };\n    case 'C1-':\n      return { counter: state.counter - 1 };\n    default:\n      return state;\n  }\n}\n\nconst counterReducer2 = (state, action) => {\n  switch (action.type) {\n    case 'C2+':\n      return { counter: state.counter + 2 };\n    case 'C2-':\n      return { counter: state.counter - 2 };\n    default:\n      return state;\n  }\n}\n\nconst counterReducer3 = (state, action) => {\n  switch (action.type) {\n    case 'C3+':\n      return { counter: state.counter + 3 };\n    case 'C3-':\n      return { counter: state.counter - 3 };\n    default:\n      return state;\n  }\n}\n\n\nconst appStore = createStore({\n  C1: [counterReducer1, { counter: 10 }, it => it],\n  C2: [counterReducer2, { counter: 20 }, it => it],\n  C3: [counterReducer3, { counter: 30 }, it => it]\n});\n\n\n\nfunction CounterApp() {\n  return (\n    <StoreContext.Provider value={appStore}>\n      <div className=\"counter\">\n        <C1 />\n        <C2 />\n        <C2 name=\"C3\" />\n      </div>\n    </StoreContext.Provider>\n  );\n}\n\nexport default CounterApp;","import generate from '@babel/generator';\nimport React, { useState } from 'react'\nimport { useDispatch } from '../../module'\n\nconst init = { name: '', description: '' }\n\nexport const TodoForm = () => {\n    const dispatch = useDispatch();\n    const [form, setForm] = useState(init)\n    const onChange = (e) => {\n        let { name, value } = e.target;\n        setForm({ ...form, [name]: value });\n    }\n    const onClick = () => {\n        let payload = { ...form, id: createId() }\n        dispatch({ type: '[TODO]-ADD', payload });\n        setForm(init);\n    }\n    return (\n        <div className=\"todo-form\">\n            <label>Name:</label>\n            <input name=\"name\" onChange={onChange} value={form.name} />\n            <label>Description:</label>\n            <input name=\"description\" onChange={onChange} value={form.description} />\n            <button onClick={onClick}>Adicionar</button>\n        </div>\n    )\n}\nfunction createId() {\n    let d = new Date();\n    return 'R' + d.valueOf();\n}\n","import React from 'react'\nimport { useDispatch } from '../../module'\n\nexport const TodoItem = ({ todo }) => {\n    const dispatch = useDispatch();\n    const onClick = () => {\n        dispatch({ type: '[TODO]-DEL', payload: todo.id });\n    }\n    return (\n        <div>\n            <b>{todo.name}</b>\n            <sup>{todo.id}</sup>\n            <sub>* {todo.description}</sub>\n            <button onClick={onClick}>Eliminar</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from '../../module'\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = () => {\n    const todoList = useSelector(it => it.todoList);\n    return (\n        <ul className=\"todo-list\">\n            {todoList.map(it => (\n                <li key={it.id}>\n                    <TodoItem todo={it}/>\n                </li>\n            ))}\n        </ul>\n    )\n}\n","import React from 'react'\nimport StoreContext, { createStore } from '../../module';\nimport './TodoApp.css'\nimport { TodoForm } from './TodoForm';\nimport { TodoList } from './TodoList';\n\n\nconst todoListReducer = (state, action) => {\n    switch (action.type) {\n        case '[TODO]-ADD':\n            let it = action.payload;\n            return [...state, it]\n        case '[TODO]-DEL':\n            const id = action.payload;\n            return state.filter(it => it.id !== id);\n        default:\n            return state;\n    }\n}\n\n\nconst appStore = createStore({\n    todoList: [todoListReducer, []]\n});\n\nconst TodoApp = () => {\n    return (\n        <StoreContext.Provider value={appStore}>\n            <div className=\"todo\">\n                <TodoForm />\n                <TodoList />\n            </div>\n        </StoreContext.Provider>\n    )\n}\n\nexport default TodoApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CounterApp from './examples/counter/CounterApp';\nimport TodoApp from './examples/todo/TodoApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CounterApp />\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}